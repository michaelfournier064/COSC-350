Microsoft (R) Macro Assembler Version 14.43.34808.0	    02/26/25 11:05:58
MFdata_transfer.asm					     Page 1 - 1


				;Data Transfer Lab
				;COSC 350
				;Michael Fournier

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data
					;Exercise One--Creating definition's and initialize values 
					;for the following data types BYTE, SBYTE, WORD, SWORD, DWORD, SDWORD, REAL4
 00000000 22				myByte		BYTE		22h
 00000001 DE				mySbyte		SBYTE		-22h
 00000002 4444				myWord		WORD		4444h
 00000004 BBBC				mySword		SWORD		-4444h
 00000006 88888888			myDword		DWORD		88888888h
 0000000A 77777778			mySdword	SDWORD		-88888888h
 0000000E 40490FDB			myReal4		REAL4		3.1415927

					;Exercise Two--Declare an array of 60 unsigned double words
 00000012  0000003C [			myArr		DWORD		60 dup(?)			;An array of 60 uninitialized DWORD's
	    00000000
	   ]
 00000102  0000003C [			myInitArr	DWORD		60 dup(0ABCDABCDh)	;An array of 60 initialized DWORD's
	    ABCDABCD
	   ]

					;Exercise Three--Create a dword that stores 12345678h
 000001F2 12345678			myHexDword	DWORD		12345678h
					
					;Exercise Four--Make a DWORD called 'three'
 000001F6 44448888			three		DWORD		44448888h

 00000000			.code
 00000000			main proc
					;Exercise One--Moving variables into a register that properly contains their value
					;for the following data types BYTE, SBYTE, WORD, SWORD, DWORD, SDWORD, REAL4
 00000000  8A 25 00000000 R		mov ah,	myBYTE
 00000006  A0 00000001 R		mov	al,	mySBYTE
 0000000B  66| 8B 1D			mov bx, myWORD
	   00000002 R
 00000012  C1 E3 10			shl ebx,16		;Shift BX value into the upper half of EBX
 00000015  66| 8B 1D			mov bx, mySWORD
	   00000004 R
 0000001C  A1 00000006 R		mov eax,myDWORD
 00000021  8B 15 0000000A R		mov edx,mySDWORD
 00000027  D9 05 0000000E R		fld myREAL4		;Load floating-point value into FPU

					;Exercise Four--Moving the upper have to the lower have of  the DWORD 'three'
 0000002D  A1 000001F6 R		mov eax,three
 00000032  C1 C8 10			ror eax,16		;Flips the first 16 bits and the last 16 bits in eax

					invoke ExitProcess,0
 00000035  6A 00	   *	    push   +000000000h
 00000037  E8 00000000 E   *	    call   ExitProcess
 0000003C			main endp
				end main
Microsoft (R) Macro Assembler Version 14.43.34808.0	    02/26/25 11:05:58
MFdata_transfer.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001FA DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000003C DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000003C Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
myArr  . . . . . . . . . . . . .	DWord	 00000012 _DATA	
myByte . . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDword  . . . . . . . . . . . .	DWord	 00000006 _DATA	
myHexDword . . . . . . . . . . .	DWord	 000001F2 _DATA	
myInitArr  . . . . . . . . . . .	DWord	 00000102 _DATA	
myReal4  . . . . . . . . . . . .	DWord	 0000000E _DATA	
mySbyte  . . . . . . . . . . . .	Byte	 00000001 _DATA	
mySdword . . . . . . . . . . . .	DWord	 0000000A _DATA	
mySword  . . . . . . . . . . . .	Word	 00000004 _DATA	
myWord . . . . . . . . . . . . .	Word	 00000002 _DATA	
three  . . . . . . . . . . . . .	DWord	 000001F6 _DATA	

	   0 Warnings
	   0 Errors
