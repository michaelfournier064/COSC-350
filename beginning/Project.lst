Microsoft (R) Macro Assembler Version 14.43.34808.0	    02/22/25 22:40:38
michael_fournier_beginning.asm				     Page 1 - 1


				;Beginning Lab
				;COSC 350
				;Michael Fournier

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword
 00000000			.data
 00000000 00000023		    MY_A    DWORD    00000023h
 00000004 00000042		    MY_B    DWORD    00000042h
 00000008 00000091		    MY_C    DWORD    00000091h
 0000000C 00000012		    MY_D    DWORD    00000012h

 00000010 00000018		    MY_24   DWORD    00000018h
 00000014 0000000D		    MY_13   DWORD    0000000Dh

				;QUESTION 4-----------------------------------------------------------
 00000018 4D 69 63 68 61	    myName BYTE "Michael Fournier", 0
	   65 6C 20 46 6F
	   75 72 6E 69 65
	   72 00

 00000029 FF			    myByte      BYTE    0FFh           ; 8-bit  (255 in unsigned decimal)
 0000002A 1234			    myWord      WORD    1234h          ; 16-bit (4660 in decimal)
 0000002C 12345678		    myDword     DWORD   12345678h      ; 32-bit (305419896 in decimal)

 00000030 F6			    mySignedByte   SBYTE  -10        ; -10 decimal = 0xF6 in hex
 00000031 FB2E			    mySignedWord   SWORD  -1234      ; -1234 decimal
 00000033 FF439EB2		    mySignedDword  SDWORD -12345678  ; -12,345,678 decimal


 00000000			.code
 00000000			main proc
				;QUESTION 1-----------------------------------------------------------
 00000000  B8 00000005		    mov eax,    5   ;moves 5h to eax register
 00000005  83 C0 06		    add eax,    6   ;adds 6h to eax register

				;QUESTION 2-----------------------------------------------------------
 00000008  A1 00000000 R	    mov eax,MY_A    ;moves MY_A to eax register
 0000000D  8B 1D 00000004 R	    mov ebx,MY_B    ;moves MY_B to ebx register
 00000013  8B 0D 00000008 R	    mov ecx,MY_C    ;moves MY_C to ecx register
 00000019  8B 15 0000000C R	    mov edx,MY_D    ;moves MY_D to edx register

 0000001F  03 CA		    add ecx,edx     ;adds value stored in edx to ecx    (MY_C + MY_D)
 00000021  03 C3		    add eax,ebx     ;adds value stored in ebx to eax    (MY_A + MY_B)
 00000023  2B C1		    sub eax,ecx     ;subtracts value of ecx from eax    (MY_A + MY_B) - (MY_C + MY_D)

				;QUESTION 3-----------------------------------------------------------
 00000025  A1 00000000 R	    mov eax,MY_A    ;moves MY_A to eax register
 0000002A  8B 1D 00000004 R	    mov ebx,MY_B    ;moves MY_B to ebx register
 00000030  8B 0D 00000008 R	    mov ecx,MY_C    ;moves MY_C to ecx register
 00000036  8B 15 0000000C R	    mov edx,MY_D    ;moves MY_D to edx register

 0000003C  8B F1		    mov esi,ecx   ;moves value of MY_C to temp register esi
 0000003E  2B 35 00000014 R	    sub esi,MY_13 ;subtracts 13d from MY_C   (MY_C – 13d)
 00000044  03 15 00000010 R	    add edx,MY_24       ;adds 18h(24d) to edx register      (MY_D + 24d)

 0000004A  03 DE		    add ebx,esi         ;adds vaue in esi to ebx register   ((MY_C - 13d) + B)
 0000004C  03 C3		    add eax,ebx         ;(MY_A + ((MY_C - 13d) + B))
 0000004E  2B C8		    sub ecx,eax         ;(MY_C - (MY_A + ((MY_C - 13d) + B)))
 00000050  03 CA		    add ecx,edx         ;((MY_A + ((MY_C - 13d) + B)) + (MY_D + 24d))

 00000052  8B C1		    mov eax,ecx         ;MY_A = MY_C


					invoke ExitProcess,0
 00000054  6A 00	   *	    push   +000000000h
 00000056  E8 00000000 E   *	    call   ExitProcess
 0000005B			main endp
				end main
Microsoft (R) Macro Assembler Version 14.43.34808.0	    02/22/25 22:40:38
michael_fournier_beginning.asm				     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000037 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000005B DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000005B Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
MY_13  . . . . . . . . . . . . .	DWord	 00000014 _DATA	
MY_24  . . . . . . . . . . . . .	DWord	 00000010 _DATA	
MY_A . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
MY_B . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
MY_C . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
MY_D . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
myByte . . . . . . . . . . . . .	Byte	 00000029 _DATA	
myDword  . . . . . . . . . . . .	DWord	 0000002C _DATA	
myName . . . . . . . . . . . . .	Byte	 00000018 _DATA	
mySignedByte . . . . . . . . . .	Byte	 00000030 _DATA	
mySignedDword  . . . . . . . . .	DWord	 00000033 _DATA	
mySignedWord . . . . . . . . . .	Word	 00000031 _DATA	
myWord . . . . . . . . . . . . .	Word	 0000002A _DATA	

	   0 Warnings
	   0 Errors
